<!DOCTYPE html>
<html lang="zh-CN">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->
    <title>Bootstrap 101 Template</title>

    <!-- Bootstrap -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 -->
    <!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 -->
    <!--[if lt IE 9]>
      <script src="https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js"></script>
    <![endif]-->
  </head>
  <body>
    <div class="container-fluid" id="app">
        <div class="row" style="margin-top: 40px;color: green">
            <div v-if="books.length == 0">
                  <h2>购物车没有商品</h2>
            </div>
            <div class="table-responsive" v-else>
                <table class="table table-bordered">
                    <thead>
                      <tr>
                        <th scope="col">#</th>
                        <th scope="col">书籍名称</th>
                        <th scope="col">出版日期</th>
                        <th scope="col">价格</th>
                        <th scope="col">购买数量</th>
                        <th scope="col">操作</th>
                      </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(book,index) in books">
                            <td>{{index+1}}</td>
                            <td>{{book.name}}</td>
                            <td>{{book.date}}</td>
                            <td>{{book.price|showPrice}}</td>
                            <td>
                                <button @click="sub(book.name)" v-bind:disabled="book.amount<=0">-</button>
                                {{book.amount}}
                                <button @click="add(book.name)">+</button>
                            </td>
                            <td>
                                <button @click="remove(book.name)" >移除</button>
                            </td>
                        </tr>
                    </tbody>
                  </table>
                <h2>总价：{{totalPrice| showPrice}}</h2>
            </div>
        </div>
    </div>
    <!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) -->
    <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js"></script>
    <!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 -->
    <script src="js/bootstrap.min.js"></script>
    <script src="js/vue.js"></script>
    <script>
        const vue =new Vue({
            el: '#app',
            data:{
                books: [{name:'A', date:'B',price:12, amount:0},
                {name:'B', date:'B', price:1, amount:0},
                {name:'C', date:'B', price:1, amount:0},
                {name:'D', date:'B', price:12,amount:0}
            ]
            },
            methods:{
                add(tmp_name){
                    console.log("add")
                    for(let i = 0; i < this.books.length; i++) {
	                    if (this.books[i].name == tmp_name){
                            this.books[i].amount +=1;
                            console.log(this.books[i].amount); 
                        }
                    }
                },
                sub(tmp_name){
                    console.log("sub")
                    for(let i = 0; i < this.books.length; i++) {
	                    if (this.books[i].name == tmp_name){
                            if (this.books[i].amount == 0){
                                alert('目前没库存，不能继续减少');
                            } else{
                                this.books[i].amount -=1;
                            }
                            console.log(this.books[i].amount); 
                        }
                    }
                },
                remove(tmp_name){
                    for(let i = 0; i < this.books.length; i++) {
	                    if (this.books[i].name == tmp_name){ 
                            this.books.splice(i,1);
                            console.log("remove");
                        }
                    }
                },
            },
            filters:{
                showPrice(price){
                    return '$' + price.toFixed(2);
                }
            },
            computed:{
                totalPrice(){
                    let totalPrice =  0;
                    for(let i = 0; i < this.books.length; i++) {
	                    totalPrice += this.books[i].price * this.books[i].amount;
                    }
                    return totalPrice
                }
            }
        }
        )
    </script>
  </body>
</html>
